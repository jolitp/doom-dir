Command-line interface (CLI) help:
Usage: languagetool [OPTION]... FILE
 FILE                      plain text file to be checked
 Available options:
  -r, --recursive          work recursively on directory, not on a single file
  -c, --encoding ENC       character set of the input text, e.g. utf-8 or latin1
  -b                       assume that a single line break marks the end of a paragraph
  -l, --language LANG      the language code of the text, e.g. en for English, en-GB for British English
  --list                   print all available languages and exit
  -adl, --autoDetect       auto-detect the language of the input text - note this will not detect
                           variants like 'English (US)', so you will not get spell checking for
                           languages with variants
  -m, --mothertongue LANG  the language code of your first language, used to activate false-friend checking
  -d, --disable RULES      a comma-separated list of rule ids to be disabled (use no spaces between ids)
  -e, --enable RULES       a comma-separated list of rule ids to be enabled (use no spaces between ids)
  -eo, --enabledonly       disable all rules except those enabled explicitly in -e
  --enablecategories CAT   a comma-separated list of category ids to be enabled (use no spaces between ids)
  --disablecategories CAT  a comma-separated list of category ids to be disabled (use no spaces between ids)
  -t, --taggeronly         don't check, but only print text analysis (sentences, part-of-speech tags)
  -u, --list-unknown       also print a summary of words from the input that LanguageTool doesn't know
  -b2, --bitext            check bilingual texts with a tab-separated input file,
                           see http://languagetool.wikidot.com/checking-translations-bilingual-texts
  --api                    print results as XML (deprecated, please use --json or the JSON API in server mode)
  --json                   print results as JSON
  -p, --profile            print performance measurements
  -v, --verbose            print text analysis (sentences, part-of-speech tags) to STDERR
  --version                print LanguageTool version number and exit
  -a, --apply              automatically apply suggestions if available, printing result to STDOUT
                           NOTE: only use with very robust rules, as this will otherwise introduce new errors
  --rulefile FILE          use an additional grammar file; if the filename contains a known language code,
                           it is used in addition of standard rules
  --remoterules FILE       configure rules depending on external services via a JSON file (optional)
  --falsefriends FILE      use external false friend file to be used along with the built-in rules
  --bitextrules  FILE      use external bitext XML rule file (useful only in bitext mode)
  --languagemodel DIR      a directory with e.g. 'en' sub directory (i.e. a language code) that contains
                           '1grams'...'3grams' sub directories with Lucene indexes with
                           ngram occurrence counts; activates the confusion rule if supported;
                           see https://dev.languagetool.org/finding-errors-using-n-gram-data
  --word2vecmodel DIR      a directory with e.g. 'en' sub directory (i.e. a language code) that contains
                           final_embeddings.txt and dictionary.txt; activates neural network based rules
  --neuralnetworkmodel DIR a base directory for various saved neural network models (deprecated)
  --fasttextmodel FILE     fasttext language detection model (optional), see https://fasttext.cc/docs/en/language-identification.html
  --fasttextbinary FILE    fasttext executable (optional), see https://fasttext.cc/docs/en/support.html
  --xmlfilter              remove XML/HTML elements from input before checking (deprecated)
  --line-by-line           work on file line by line (for development, e.g. inside an IDE)
  --enable-temp-off        enable all temp_off rules (for testing and development)
  --level level            enable the given level (currently only 'PICKY')

Graphical user interface (GUI) help:
Usage: languagetool [-t|--tray]
    or languagetool [file]
Parameters:
    -t, --tray: dock LanguageTool to system tray on startup
    file:       a plain text file to load on startup

HTTP server help:
Usage: languagetool --http [--config propertyFile] [--port|-p port] [--public]
  --config FILE  a Java property file (one key=value entry per line) with values for:
                 'maxTextLength' - maximum text length, longer texts will cause an error (optional)
                 'maxTextHardLength' - maximum text length, applies even to users with a special secret 'token' parameter (optional)
                 'secretTokenKey' - secret JWT token key, if set by user and valid, maxTextLength can be increased by the user (optional)
                 'maxCheckTimeMillis' - maximum time in milliseconds allowed per check (optional)
                 'maxErrorsPerWordRate' - checking will stop with error if there are more rules matches per word (optional)
                 'maxSpellingSuggestions' - only this many spelling errors will have suggestions for performance reasons (optional,
                                            affects Hunspell-based languages only)
                 'maxCheckThreads' - maximum number of threads working in parallel (optional)
                 'cacheSize' - size of internal cache in number of sentences (optional, default: 0)
                 'cacheTTLSeconds' - how many seconds sentences are kept in cache (optional, default: 300 if 'cacheSize' is set)
                 'requestLimit' - maximum number of requests per requestLimitPeriodInSeconds (optional)
                 'requestLimitInBytes' - maximum aggregated size of requests per requestLimitPeriodInSeconds (optional)
                 'timeoutRequestLimit' - maximum number of timeout request (optional)
                 'requestLimitPeriodInSeconds' - time period to which requestLimit and timeoutRequestLimit applies (optional)
                 'languageModel' - a directory with '1grams', '2grams', '3grams' sub directories which contain a Lucene index
                                   each with ngram occurrence counts; activates the confusion rule if supported (optional)
                 'word2vecModel' - a directory with word2vec data (optional), see
                  https://github.com/languagetool-org/languagetool/blob/master/languagetool-standalone/CHANGES.md#word2vec
                 'fasttextModel' - a model file for better language detection (optional), see
                                   https://fasttext.cc/docs/en/language-identification.html
                 'fasttextBinary' - compiled fasttext executable for language detection (optional), see
                                    https://fasttext.cc/docs/en/support.html
                 'maxWorkQueueSize' - reject request if request queue gets larger than this (optional)
                 'rulesFile' - a file containing rules configuration, such as .langugagetool.cfg (optional)
                 'warmUp' - set to 'true' to warm up server at start, i.e. run a short check with all languages (optional)
                 'blockedReferrers' - a comma-separated list of HTTP referrers (and 'Origin' headers) that are blocked and will not be served (optional)
                 'premiumOnly' - activate only the premium rules (optional)
                 'disabledRuleIds' - a comma-separated list of rule ids that are turned off for this server (optional)
                 'pipelineCaching' - set to 'true' to enable caching of internal pipelines to improve performance
                 'maxPipelinePoolSize' - cache size if 'pipelineCaching' is set
                 'pipelineExpireTimeInSeconds' - time after which pipeline cache items expire
                 'pipelinePrewarming' - set to 'true' to fill pipeline cache on start (can slow down start a lot)
                 Spellcheck-only languages: You can add simple spellcheck-only support for languages that LT doesn't
                                            support by defining two optional properties:
                   'lang-xx' - set name of the language, use language code instead of 'xx', e.g. lang-tr=Turkish
                   'lang-xx-dictPath' - absolute path to the hunspell .dic file, use language code instead of 'xx', e.g.
                                        lang-tr-dictPath=/path/to/tr.dic. Note that the same directory also needs to
                                        contain a common_words.txt file with the most common 10,000 words (used for better language detection)
  --port, -p PRT   port to bind to, defaults to 8081 if not specified
  --public         allow this server process to be connected from anywhere; if not set,
                   it can only be connected from the computer it was started on
  --allow-origin [ORIGIN] set the Access-Control-Allow-Origin header in the HTTP response,
                         used for direct (non-proxy) JavaScript-based access from browsers.
                         Example: --allow-origin "https://my-website.org"
                         Don't set a parameter for `*`, i.e. access from all websites.
  --verbose, -v    in case of exceptions, log the input text (up to 500 characters)
  --languageModel  a directory with '1grams', '2grams', '3grams' sub directories (per language)
                         which contain a Lucene index (optional, overwrites 'languageModel'
                         parameter in properties files)
  --word2vecModel  a directory with word2vec data (optional), see
                   https://github.com/languagetool-org/languagetool/blob/master/languagetool-standalone/CHANGES.md#word2vec
  --premiumAlways  activate the premium rules even when user has no username/password - useful for API servers

HTTPS server help:
Usage: languagetool --config propertyFile [--port|-p port] [--public]
  --config file  a Java property file (one key=value entry per line) with values for:
                 'keystore' - a Java keystore with an SSL certificate (deprecated, use a reverse proxy to handle SSL)
                 'password' - the keystore's password (deprecated, use a reverse proxy to handle SSL)
                 'maxTextLength' - maximum text length, longer texts will cause an error (optional)
                 'maxTextHardLength' - maximum text length, applies even to users with a special secret 'token' parameter (optional)
                 'secretTokenKey' - secret JWT token key, if set by user and valid, maxTextLength can be increased by the user (optional)
                 'maxCheckTimeMillis' - maximum time in milliseconds allowed per check (optional)
                 'maxErrorsPerWordRate' - checking will stop with error if there are more rules matches per word (optional)
                 'maxSpellingSuggestions' - only this many spelling errors will have suggestions for performance reasons (optional,
                                            affects Hunspell-based languages only)
                 'maxCheckThreads' - maximum number of threads working in parallel (optional)
                 'cacheSize' - size of internal cache in number of sentences (optional, default: 0)
                 'cacheTTLSeconds' - how many seconds sentences are kept in cache (optional, default: 300 if 'cacheSize' is set)
                 'requestLimit' - maximum number of requests per requestLimitPeriodInSeconds (optional)
                 'requestLimitInBytes' - maximum aggregated size of requests per requestLimitPeriodInSeconds (optional)
                 'timeoutRequestLimit' - maximum number of timeout request (optional)
                 'requestLimitPeriodInSeconds' - time period to which requestLimit and timeoutRequestLimit applies (optional)
                 'languageModel' - a directory with '1grams', '2grams', '3grams' sub directories which contain a Lucene index
                                   each with ngram occurrence counts; activates the confusion rule if supported (optional)
                 'word2vecModel' - a directory with word2vec data (optional), see
                  https://github.com/languagetool-org/languagetool/blob/master/languagetool-standalone/CHANGES.md#word2vec
                 'fasttextModel' - a model file for better language detection (optional), see
                                   https://fasttext.cc/docs/en/language-identification.html
                 'fasttextBinary' - compiled fasttext executable for language detection (optional), see
                                    https://fasttext.cc/docs/en/support.html
                 'maxWorkQueueSize' - reject request if request queue gets larger than this (optional)
                 'rulesFile' - a file containing rules configuration, such as .langugagetool.cfg (optional)
                 'warmUp' - set to 'true' to warm up server at start, i.e. run a short check with all languages (optional)
                 'blockedReferrers' - a comma-separated list of HTTP referrers (and 'Origin' headers) that are blocked and will not be served (optional)
                 'premiumOnly' - activate only the premium rules (optional)
                 'disabledRuleIds' - a comma-separated list of rule ids that are turned off for this server (optional)
                 'pipelineCaching' - set to 'true' to enable caching of internal pipelines to improve performance
                 'maxPipelinePoolSize' - cache size if 'pipelineCaching' is set
                 'pipelineExpireTimeInSeconds' - time after which pipeline cache items expire
                 'pipelinePrewarming' - set to 'true' to fill pipeline cache on start (can slow down start a lot)
                 Spellcheck-only languages: You can add simple spellcheck-only support for languages that LT doesn't
                                            support by defining two optional properties:
                   'lang-xx' - set name of the language, use language code instead of 'xx', e.g. lang-tr=Turkish
                   'lang-xx-dictPath' - absolute path to the hunspell .dic file, use language code instead of 'xx', e.g.
                                        lang-tr-dictPath=/path/to/tr.dic. Note that the same directory also needs to
                                        contain a common_words.txt file with the most common 10,000 words (used for better language detection)
  --port, -p PRT   port to bind to, defaults to 8081 if not specified
  --public         allow this server process to be connected from anywhere; if not set,
                   it can only be connected from the computer it was started on
  --allow-origin [ORIGIN] set the Access-Control-Allow-Origin header in the HTTP response,
                         used for direct (non-proxy) JavaScript-based access from browsers.
                         Example: --allow-origin "https://my-website.org"
                         Don't set a parameter for `*`, i.e. access from all websites.
  --verbose, -v    in case of exceptions, log the input text (up to 500 characters)
  --languageModel  a directory with '1grams', '2grams', '3grams' sub directories (per language)
                         which contain a Lucene index (optional, overwrites 'languageModel'
                         parameter in properties files)
  --word2vecModel  a directory with word2vec data (optional), see
                   https://github.com/languagetool-org/languagetool/blob/master/languagetool-standalone/CHANGES.md#word2vec
  --premiumAlways  activate the premium rules even when user has no username/password - useful for API servers
